import { NextResponse } from 'next/server';
import admin from '@/lib/firebase-admin';
import { verifyToken } from '@/utils/auth-utils';

export async function POST(request) {
  try {
    const { token } = await request.json();
    
    console.log('üîë Check Admin Permission - Token nh·∫≠n ƒë∆∞·ª£c:', token ? 'C√≥ token' : 'Kh√¥ng c√≥ token');
    
    if (!token) {
      return NextResponse.json({ 
        hasAdminAccess: false,
        message: 'Kh√¥ng t√¨m th·∫•y token x√°c th·ª±c'
      });
    }
    
    // X√°c th·ª±c token v√† l·∫•y th√¥ng tin ng∆∞·ªùi d√πng t·ª´ Firebase
    try {
      console.log('üîë Check Admin Permission - B·∫Øt ƒë·∫ßu x√°c th·ª±c token');
      const decodedToken = await verifyToken(token);
      console.log('üîë Check Admin Permission - Decoded token:', decodedToken ? JSON.stringify(decodedToken) : 'Kh√¥ng gi·∫£i m√£ ƒë∆∞·ª£c');
      
      if (!decodedToken || !decodedToken.uid) {
        return NextResponse.json({ 
          hasAdminAccess: false,
          message: 'Token kh√¥ng h·ª£p l·ªá'
        });
      }
      
      // Ki·ªÉm tra role t·ª´ token thay v√¨ email c·ª• th·ªÉ
      const hasAdminAccess = decodedToken.role === 'admin';
      console.log(`üîë Check Admin Permission - Email: ${decodedToken.email}, Role: ${decodedToken.role}, C√≥ quy·ªÅn admin: ${hasAdminAccess}`);
      
      return NextResponse.json({
        hasAdminAccess,
        message: hasAdminAccess 
          ? 'C√≥ quy·ªÅn truy c·∫≠p trang qu·∫£n tr·ªã' 
          : 'Kh√¥ng c√≥ quy·ªÅn truy c·∫≠p trang qu·∫£n tr·ªã',
        user: {
          uid: decodedToken.uid,
          email: decodedToken.email,
          role: decodedToken.role
        }
      });
    } catch (error) {
      console.error('‚ùå L·ªói x√°c th·ª±c Firebase:', error);
      return NextResponse.json({
        hasAdminAccess: false,
        message: 'L·ªói x√°c th·ª±c: ' + error.message
      });
    }
  } catch (error) {
    console.error('‚ùå L·ªói ki·ªÉm tra quy·ªÅn admin:', error);
    return NextResponse.json({
      hasAdminAccess: false,
      message: 'L·ªói ki·ªÉm tra quy·ªÅn truy c·∫≠p'
    });
  }
} 