import { NextResponse } from 'next/server';
import clientPromise from '@/lib/mongodb';

export async function POST(request) {
  try {
    const { uid } = await request.json();
    
    if (!uid) {
      return NextResponse.json(
        { success: false, error: 'UID kh√¥ng ƒë∆∞·ª£c cung c·∫•p' },
        { status: 400 }
      );
    }
    
    console.log('üîç API User Role - ƒêang truy v·∫•n role cho UID:', uid);
    
    // K·∫øt n·ªëi MongoDB
    const client = await clientPromise;
    const db = client.db(process.env.MONGODB_DB || 'kimvan');
    
    // T√¨m user trong MongoDB
    const userFromDB = await db.collection('users').findOne({ firebaseId: uid });
    
    if (!userFromDB) {
      console.log('‚ö†Ô∏è API User Role - Kh√¥ng t√¨m th·∫•y user trong MongoDB');
      return NextResponse.json({
        success: true,
        role: null
      });
    }
    
    console.log('‚úÖ API User Role - T√¨m th·∫•y role trong MongoDB:', userFromDB.role);
    return NextResponse.json({
      success: true,
      role: userFromDB.role || 'user'
    });
    
  } catch (error) {
    console.error('‚ùå API User Role - L·ªói khi truy v·∫•n MongoDB:', error);
    return NextResponse.json(
      { success: false, error: 'L·ªói khi truy v·∫•n MongoDB: ' + error.message },
      { status: 500 }
    );
  }
} 